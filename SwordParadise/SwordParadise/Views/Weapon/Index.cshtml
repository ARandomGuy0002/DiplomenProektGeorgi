@using SwordParadise.Models.Order;
@model IEnumerable<SwordParadise.Models.Weapon.WeaponIndexVM>

@{
    ViewData["Title"] = "Index";
}
<style>
    .btn-e {
        background-color: dimgrey;
    color: white;
    text-decoration: none;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-e:hover {
    background-color: grey;
    text-decoration: none;
    color: white
}

.btn-e:focus {
    outline: none;
}
    .create-new-btn1 {
        background-color: #c9c900;
    color: white;
    text-decoration: none;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.create-new-btn1:hover {
    background-color: #d4d42f;
    text-decoration: none;
    color: black;
}

.create-new-btn1:focus {
    outline: none;
}
    .button-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        max-width: 800px;
        margin: 50px auto;
    }

    .filter-container {
        display: flex;
        align-items: center;
        margin-right: 20px; /* Add margin to separate from the "Create New" button */
        margin-bottom: 10px;
    }

    .filter-item {
        margin-right: 20px;
        margin-bottom: 10px;
    }

        .filter-item:last-child {
            margin-right: 0;
        }

    .create-new-container {
        display: flex;
        align-items: center;
        margin-left: 20px; /* Add margin to separate from the filter buttons */
        margin-bottom: 10px;
    }

    .create-new-btn {
        background-color: #fe90d2;
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .create-new-btn:hover {
            background-color: #ff6fba;
            text-decoration: none;
            color: black;
        }

        .create-new-btn:focus {
            outline: none;
        }

    input[type="submit"] {
        background-color: #c9c900;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 100px;
        margin-right: 20px; /* Add margin to separate from the filter buttons */
        margin-bottom: 10px;
    }

        input[type="submit"]:hover {
            background-color: #d4d42f;
            color: black;
        }

        input[type="submit"]:focus {
            outline: none;
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.15), 0px 0px 0px 3px rgba(254, 144, 210, 0.5);
        }

    select {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        background-color: #f3f3f3;
        font-size: 16px;
        width: 200px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-image: linear-gradient( 45deg, transparent 50%, gray 50% ), linear-gradient(135deg, gray 50%, transparent 50%);
        background-position: calc(100% - 20px) calc(1em + 2px), calc(100% - 15px) calc(1em + 2px);
        background-size: 5px 5px, 5px 5px;
        background-repeat: no-repeat;
        color: #555;
        text-indent: 0.01px;
        text-overflow: "";
        margin-right: 20px; /* Add margin to separate from the "Create New" button */
        margin-bottom: 10px;
    }

        select:last-child {
            margin-right: 0;
        }

    .gradient-custom {
        background: linear-gradient(to bottom, #fe90d2, #fefa3f);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f2f2f2;
    }

    .body-container {
        max-width: 1160px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }
    .container {
        width: 80%;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    h1 {
        text-align: center;
        margin-bottom: 20px;
    }

    .weapon-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

    .weapon-card {
        width: 300px;
        margin: 10px;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        text-align: center;
        transition: all 0.3s ease-in-out;
        text-decoration: none;
    }
    .weapon-card:hover {
        transform: scale(1.05);
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.4);
    }

        .weapon-card img {
            width: 200px;
            height: 200px;
            object-fit: contain;
            margin-bottom: 10px;
        }


    .admin-options {
        text-align: center;
        margin-top: 10px;
    }

</style>

<body class="gradient-custom">
    <h1>Weapons</h1>
    <div class="button-container">
        <form asp-controller="Weapon" asp-action="Index" method="get" class="filter-form">
            <div class="filter-container">
                <div class="filter-item">
                    <label for="brand"></label>
                    <select name="SearchStringBrandName" id="brand">
                        <option value="">All Brands</option>
                        <option value="Sako">Sako</option>
                        <option value="Glock">Glock</option>
                        <option value="Fabarm">Fabarm</option>
                        <option value="Blaser">Blaser</option>
                        <option value="Benelli">Benelli</option>
                        <!-- Add more brand options here -->
                    </select>
                </div>
                <div class="filter-item">
                    <label for="category"></label>
                    <select name="SearchStringCategoryName" id="category">
                        <option value="">All Categories</option>
                        <option value="Sword">Sword</option>
                        <option value="Pistol">Pistol</option>
                        <option value="Revolver">Revolver</option>
                        <option value="Crossbow">Crossbow</option>
                        <option value="Ammunition">Ammunition</option>
                        <option value="Accessories">Accessories</option>
                        <!-- Add more category options here -->
                    </select>
                </div>
                <div class="filter-item">
                    <input type="submit" value="Filter" />
                </div>
            </div>
            @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
            {
                <div class="create-new-container">
                    <a href="@Url.Action("Create")" class="create-new-btn1">Create New</a>
                </div>
            }
        </form>
    </div>
    <div class="weapon-container">
        @foreach (var item in Model)
        {
            <div class="weapon-card">
                <h2>@Html.DisplayFor(modelItem => item.WeaponName)</h2>
                <a href="@Url.Action("Details", new { id = item.Id })">
                    <img src="@Html.DisplayFor(modelItem => item.Picture)" alt="Image" />
                </a>
                <p>@Html.DisplayFor(modelItem => item.Description)</p>
                <p>Quantity: @Html.DisplayFor(modelItem => item.Quantity)</p>
                <p>Price: @Html.DisplayFor(modelItem => @item.Price)</p>
                @if (item.Discount > 0)
                        {
                    <p>Discount: @Html.DisplayFor(modelItem => @item.Discount)%</p>
                        }
                <div class="order-part">
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                {
                WeaponId = item.Id
                })
                    }
                </div>
                <div class="admin-options">
                    @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Administrator"))
                    {
                        <a href="@Url.Action("Edit", new {id = item.Id})" class="btn-e">Edit</a>
                    }
                    @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Administrator"))
                    {
                        <a href="@Url.Action("Delete", new {id = item.Id})" class="btn-e">Delete</a>
                    }
                </div>
            </div>
        }
    </div>
    @section Scripts{
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
