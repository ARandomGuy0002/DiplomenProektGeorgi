@model SwordParadise.Models.Weapon.WeaponDetailsVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<style>
    .review {
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
    }

    .name {
      font-weight: bold;
      margin-right: 5px;
    }

    .stars {
      color: orange;
    }

    .star {
      font-size: 16px;
      margin-right: 2px;
    }

    .comment {
      font-style: italic;
    }
  </style>
<div>
    <h4>WeaponDetailsVM</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.WeaponName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.WeaponName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BrandName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BrandName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Picture)
        </dt>
        <dd class="col-sm-10">
            <img src="@Html.DisplayFor(model => model.Picture)" alt="Image" width="100" />
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Discount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Discount)
        </dd>
    </dl>
    <h1>Reviews</h1>
    <div id="reviews"></div>
    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }|
    <a asp-action="Index">Back to List</a>
</div>
<script>
    const names = [
        "John",
        "Sarah",
        "David",
        "Emily",
        "Michael",
        "Jessica",
        "Jason",
        "Jennifer",
        "Andrew",
        "Amanda"
    ];

    const comments = [
        "Great product!",
        "I love this!",
        "So useful and convenient!",
        "Highly recommend!",
        "Best purchase ever!",
        "Exactly what I needed.",
        "Can't live without it!",
        "Worth every penny.",
        "So happy with this purchase!",
        "Excellent quality and value."
    ];

    function getRandomNumber(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function getRandomName() {
        return names[getRandomNumber(0, names.length - 1)];
    }

    function getRandomStarRating() {
        return getRandomNumber(4, 5);
    }

    function getRandomComment() {
        return comments[getRandomNumber(0, comments.length - 1)];
    }

    function generateRandomReview() {
        return {
            name: getRandomName(),
            stars: getRandomStarRating(),
            comment: getRandomComment()
        };
    }

    function generateReviews(numReviews) {
        const reviewsContainer = document.getElementById("reviews");

        for (let i = 0; i < numReviews; i++) {
            const review = generateRandomReview();
            const reviewContainer = document.createElement("div");
            reviewContainer.classList.add("review");

            const nameElement = document.createElement("span");
            nameElement.classList.add("name");
            nameElement.textContent = review.name;
            reviewContainer.appendChild(nameElement);

            const starsElement = document.createElement("span");
            starsElement.classList.add("stars");
            reviewContainer.appendChild(starsElement);
            for (let j = 0; j < review.stars; j++) {
                const starElement = document.createElement("span");
                starElement.classList.add("star");
                starElement.textContent = "★";
                starsElement.appendChild(starElement);
            }

            const commentElement = document.createElement("p");
            commentElement.classList.add("comment");
            commentElement.textContent = review.comment;
            reviewContainer.appendChild(commentElement);

            reviewsContainer.appendChild(reviewContainer);
        }
    }

    generateReviews(4);
</script>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
