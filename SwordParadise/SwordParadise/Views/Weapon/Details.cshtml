@model SwordParadise.Models.Weapon.WeaponDetailsVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>WeaponDetailsVM</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.WeaponName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.WeaponName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BrandName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BrandName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Picture)
        </dt>
        <dd class="col-sm-10">
            <img src="@Html.DisplayFor(model => model.Picture)" alt="Image" width="100" />
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Discount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Discount)
        </dd>
    </dl>
    <h1>Reviews</h1>
    <ul>
        <li><span id="review1"></span></li>
        <li><span id="review2"></span></li>
        <li><span id="review3"></span></li>
        <li><span id="review4"></span></li>
    </ul>
</div>
<div>
    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }|
    <a asp-action="Index">Back to List</a>
</div>
<script>
    const reviews = [
        "This weapon is incredibly powerful and accurate. It's my go-to choice for long-range engagements.",
        "I was skeptical at first, but this weapon proved to be surprisingly effective in close-quarters combat.",
        "Although it may not have the highest damage output, this weapon's versatility makes it a solid choice in a variety of situations.",
        "This weapon is definitely not for the faint of heart. It has a high recoil and a steep learning curve, but in the hands of a skilled operator it can be devastating.",
        "This weapon is a beast! It deals massive damage and has excellent range, making it the perfect choice for taking out enemies from a distance.",
        "I've used a lot of weapons in my time, but this one stands out as one of the best. It's easy to use and incredibly effective.",
        "Don't let its size fool you, this weapon packs a serious punch. It's perfect for taking out multiple enemies at once.",
        "This weapon is my secret weapon. It's not well-known, but it's incredibly effective in certain situations.",
        "I wasn't sure about this weapon at first, but after using it for a while I've grown to love it. Its unique features make it stand out from the crowd.",
        "This weapon is a work of art. It's beautifully crafted and incredibly deadly. I wouldn't want to be on the wrong end of it."
    ];
    function generateStarRating() {
        return (Math.floor(Math.random() * 2) + 4);
    }
    function generateName() {
        const names = [
            "Georgi",
            "Mia",
            "Max",
            "Samantha",
            "Liam",
            "Ava",
            "Owen",
            "Zoe",
            "Ethan",
            "Emma"
        ];
        return names[Math.floor(Math.random() * names.length)];
    }
    function generateReviews() {
        let chosenReviews = [];
        while (chosenReviews.length < 4) {
            let randomReview = reviews[Math.floor(Math.random() * reviews.length)];
            if (!chosenReviews.includes(randomReview)) {
                chosenReviews.push(randomReview);
            }
        }
        return chosenReviews;
    }
    const randomReviews = generateReviews();
    document.getElementById("review1").textContent = generateName() + ": " + randomReviews[0] + " ( " + generateStarRating() + " stars )";
    document.getElementById("review2").textContent = generateName() + ": " + randomReviews[1] + " ( " + generateStarRating() + " stars )";
    document.getElementById("review3").textContent = generateName() + ": " + randomReviews[2] + " ( " + generateStarRating() + " stars )";
    document.getElementById("review4").textContent = generateName() + ": " + randomReviews[3] + " ( " + generateStarRating() + " stars )";
</script>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
